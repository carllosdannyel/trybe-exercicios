// Parte I

/*
Agora vocÃª vai fazer alguns exercÃ­cios de fixaÃ§Ã£o.
ðŸš€ Se liga nesse foguete!

Os exercÃ­cios destacados com ðŸš€ sÃ£o os fundamentais pra vocÃª ir bem no projeto! Todos os exercÃ­cios vÃ£o contribuir com sua formaÃ§Ã£o mas fique de olho nesses! ðŸ‘€

ðŸš€ FaÃ§a as modificaÃ§Ãµes necessÃ¡rias na funÃ§Ã£o para que o seu comportamento respeite o escopo no qual cada variÃ¡vel foi declarada.

Modifique a estrutura da funÃ§Ã£o para que ela seja uma arrow function .

Modifique as concatenaÃ§Ãµes para template literals .
*/

// function testingScope(escopo) { // comeco do escopo da funcao

//   if (escopo === true) { // comeco do espo do if

//     var ifScope = 'NÃ£o devo ser utilizada fora do meu escopo (if)';
//     ifScope = ifScope + ' Ã³timo, fui utilizada no escopo !';

//     console.log(ifScope);

//   } // fim do escopo do if

//     else { // comeco do escopo do else

//     var elseScope = 'NÃ£o devo ser utilizada fora meu escopo (else)';

//     console.log(elseScope);

//   } fim do escopo do else

//   console.log(ifScope + ' o que estou fazendo aqui ? :O'); // Se necessÃ¡rio esta linha pode ser removida.

// } // fim do escopo da funcao

// testingScope(true);

// const testingScope = (escopo) => {
//   let ifScope = 'NÃ£o devo ser utilizada fora do meu escopo (if)';
//   let elseScope = 'NÃ£o devo ser utilizada fora meu escopo (else)';

//   console.log(
//     escopo === true
//       ? (ifScope = `${ifScope} Ã³timo, fui utilizada no escopo!`)
//       : (ifScope = `${elseScope} o que estou fazendo aqui ? :O')`)
//   );
// };

// testingScope(true);

/* ðŸš€ Copie o cÃ³digo abaixo e faÃ§a uma funÃ§Ã£o que retorne o array oddsAndEvens em ordem crescente.

Utilize template literals para que a chamada console.log(<seu cÃ³digo>oddsAndEvens<seu cÃ³digo>); retorne "Os nÃºmeros 2,3,4,7,10,13 se encontram ordenados de forma crescente!".

BÃ´nus (opcional): tente fazer o mesmo exercÃ­cio utilizando o mÃ©todo array.sort() . Spoiler: Ã‰ possÃ­vel realizar uma funÃ§Ã£o que ordene qualquer array de nÃºmeros.
*/

// const oddsAndEvens = [13, 3, 4, 10, 7, 2];
// oddsAndEvens.sort((a, b) => a - b);
// console.log(
//   `Os nÃºmeros ${oddsAndEvens} se encontram ordenados de forma crescente!`
// );

// oddsAndEvens.sort((a, b) => b - a);
// console.log(
//   `Os nÃºmeros ${oddsAndEvens} se encontram ordenados de forma decrescente!`
// );

// revisao do gabarito

// const oddsAndEvens = [13, 3, 4, 10, 7, 2];
// // 
// // const sortArrayBonus = array => {
//   // const sortOddsAndEvens = array.sort((a, b) => a - b);
//   // return sortOddsAndEvens;
// // }
// // 
// // const sortedArrayBonus = sortArrayBonus(oddsAndEvens);
// // console.log(`Os nÃºmeros ${sortedArrayBonus} se encontram ordenados de forma crescente !`);

// const ordenarArray = array => {
//   const arrayOrdenado = array.sort((a, b) => a - b);
//   return arrayOrdenado;
// }

// const arrayOrdenado = ordenarArray(oddsAndEvens);
// console.log(`Os nÃºmeros ${arrayOrdenado} se encontram ordenados de forma crescente !`);

// separando pares e impares

// const array = [1, 4, 10, 13, 57, 98, 76, 45, 65]

// const separador = (numero) => {
//   const pares = []
//   const impares = []

//   numero.forEach((element) => {
//     element % 2 === 0 ? pares.push(element) : impares.push(element)
//   })

//   const resultado = [`esses sÃ£o os nÃºmeros pares: ${pares}`, `esses sÃ£o os nÃºmeros impares: ${impares}`]
//   return resultado
// }

// console.log(separador(array));

// const oddsAndEvens = [13, 3, 4, 10, 7, 2];

// console.log(`Os nÃºmeros ${oddsAndEvens.sort((a, b) => a - b)} se encontram ordenados de forma crescente !`);

// console.log(`Os nÃºmeros ${oddsAndEvens.sort((a, b) => a - b)} se encontram ordenados de forma crescente !`);

